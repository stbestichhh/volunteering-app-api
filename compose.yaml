services:
  server:
    build:
      context: .
    env_file:
      - .env
    environment:
      NODE_ENV: production
    ports:
      - "${PORT}:${PORT}"
    depends_on:
      db:
        condition: service_healthy
      raito:
        condition: service_started
      redis:
        condition: service_healthy

  db:
    image: postgres
    restart: always
    user: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    expose:
      - ${POSTGRES_PORT}
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis/redis-stack-server
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    environment:
      - REDIS_ARGS="--requirepass ${REDIS_PASSWORD}"
    restart: always
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  raito:
    image: stbestich/raito-cache
    ports:
      - "${RAITO_PORT}:${RAITO_PORT}"
    environment:
      NODE_ENV: production
      PORT: ${RAITO_PORT}
      HOST: ${RAITO_HOST}
    restart: always
    tty: true
    stdin_open: true
    volumes:
      - redis_data:/data

volumes:
  db-data:
  redis_data:
